import { readFile, writeFile } from 'fs-promise';

import runWithProgressBar from '../runner/runWithProgressBar';
import { HEADER_COMMENT_LINES } from './runEslintFix';

export default async function removeAutogeneratedHeader(jsFiles) {
  await runWithProgressBar(
    'Removing any existing autogenerated headers...', jsFiles, removeHeadersFromFile);
}

async function removeHeadersFromFile(path) {
  let contents = await readFile(path);
  let newContents = removeHeadersFromCode(contents);
  if (newContents !== contents) {
    await writeFile(path, newContents);
  }
}

export function removeHeadersFromCode(code) {
  let lines = code.toString().split('\n');

  let resultLines = [];
  for (let i = 0; i < lines.length; i++) {
    let line = lines[i];
    // Remove lines exactly matching a line we auto-generate.
    if (Object.values(HEADER_COMMENT_LINES).includes(line)) {
      continue;
    }

    // Remove regions of lines exactly matching our eslint-disable format.
    if (line === '/* eslint-disable') {
      let j = i + 1;
      let foundMatch = false;
      while (j < lines.length) {
        if (lines[j] === '*/') {
          foundMatch = true;
          break;
        }
        if (!lines[j].startsWith('    ') || !lines[j].endsWith(',')) {
          break;
        }
        j++;
      }
      if (foundMatch) {
        // Skip forward to j, the "*/" line, so the next considered line will be
        // the one after.
        i = j;
        continue;
      }
    }

    // Everything else gets added to the file.
    resultLines.push(line);
  }
  return resultLines.join('\n');
}
